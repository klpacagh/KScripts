version: '2.1'

references:
  deploy_container_config: &deploy_container_config
    docker:
      - image: cimg/python:3.9.6
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/app
      - restore_cache:
          name: restore cached dependencies
          key: prod-dependency-cache-v1-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install Dependencies
          command: |
            pip3 install awscli
            mkdir -p .venv
            pipenv install
      - save_cache:
          name: Cache dependencies
          key: prod-dependency-cache-v1-{{ checksum "Pipfile.lock" }}
          paths:
            - ./.venv
      - run:
          name: Remove bin folder
          command: rm -rf .venv/bin
      - run:
          name: Package and upload lambda code
          command: >
            aws cloudformation package
            --template-file template.yml
            --s3-bucket $AWS_ARTIFACT_BUCKET
            --s3-prefix $CIRCLE_PROJECT_REPONAME
            --output-template-file packaged.yml
      - run:
          name: Deploy CloudFormation template to AWS
          command: >
            aws cloudformation deploy
            --template-file packaged.yml
            --stack-name $CIRCLE_PROJECT_REPONAME
            --capabilities CAPABILITY_NAMED_IAM
            --region us-east-1
            --role-arn $AWS_DEPLOY_ROLE_ARN
            --parameter-overrides
            LogLevel=$LOG_LEVEL
            RawBucket=$RAW_BUCKET
jobs:
  run_tests:
    docker:
      - image: cimg/python:3.9.6
    working_directory: ~/app
    environment:
      LOG_LEVEL: DEBUG
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - restore_cache:
          name: restore cached dependencies
          key: dev-dependency-cache-v1-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install Dependencies
          command: pipenv install --dev
      - save_cache:
          name: Cache dependencies
          key: dev-dependency-cache-v1-{{ checksum "Pipfile.lock" }}
          paths:
            - ./.venv
      - run:
          name: Run UnitTests
          command: pipenv run test
      - persist_to_workspace:
          root: ~/app
          paths:
            - src
            - Pipfile
            - Pipfile.lock
            - template.yml

  deploy_to_sandbox:
    <<: *deploy_container_config
    environment:
      LOG_LEVEL: DEBUG
      RAW_BUCKET: datalake-raw-510716259290
  
  deploy_to_qa:
    <<: *deploy_container_config
    environment:
      LOG_LEVEL: DEBUG

  deploy_to_production:
    <<: *deploy_container_config
    environment:
      LOG_LEVEL: WARN

workflows:
  version: 2
  build-deploy:
    jobs:
      - run_tests
      - deploy_to_sandbox:
          context: enterprise-data-sandbox
          requires:
            - run_tests
          filters:
            branches:
              only: sandbox
      - deploy_to_qa:
          context: enterprise-data-qa
          requires:
            - run_tests
          filters:
            branches:
              only: qa
      - deploy_to_production:
          context: production
          requires:
            - run_tests
          filters:
            branches:
              only: main
